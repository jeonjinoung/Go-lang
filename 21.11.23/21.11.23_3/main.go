package main

import "fmt"

//상수값에 코드를 부여한것이다.

//타입이 없는 상수
//타입을 명시를 안하면 타입이 없는 상수가 된드ㅏ.

const PI = 3.14

//타입이 있는 상수
const fPI float64 = 3.14


////////////////////////////////////////////////////////////////////////////////////////
//전역변수이다.
const APPLE int = 0
const BANANA int = 1
const GRAPE int = 2

///////////////////////////////////////////////////////////////////////

func PrintlnFruit(fruit int)  {
	if fruit == APPLE {
		fmt.Println("사과는 아침에 먹어야 제맛")
	}else if fruit == BANANA{
		fmt.Println("나는 바나나")
	}else if fruit == GRAPE{
		fmt.Println("나는야 포도")
	}
}
////////////////////////////////////////////////////////////////////////////////////////

func main() {

	//상수선언    키워드      상수이름 타입    = 값
	//const     ConstValue      int = 10
	//ConstValue = 20 재선언 해도 안된다. 오류난다.

	//상수에다가 메모리값 주소를 쓰면 접근할 수가 없다.
	// const ConstValue int = 10
	//fmt.Println(&ConstValue)

/////////////////////////////////////////////////////////////////////////////
	
	// const PI float64 = 3.141592 
	

//값이 변하면 안되는 값에 써줘야한다??무엇을??상수를

/////////////////////////////////////////////////////////////////////////////


	PrintlnFruit(APPLE)
	PrintlnFruit(BANANA)
	PrintlnFruit(GRAPE)


//////////////////////////////////////////////////////////////////////////////
//나열하다 열거형 -> iota 1씩 증가하도록 정의할때는 이녀석을 쓰는것이 편리하다.
//소괄호를 벗어나면 iota의 선언한 값은 다시 0부터 시작한다.

	const(
		RED    int = iota //int의 값 = 0
		BLACK  int = iota //int의 값 = 1
		YELLOW int = iota //int의 값 = 2
	)

fmt.Println(RED)
fmt.Println(BLACK)
fmt.Println(YELLOW)

//////////////////

//규칙이 동일하다면 아래와 같이 생략 가능!!
	const(
		TIGER    int = iota + 1 //int의 값 = 1
		RABBIT					//int의 값 = 2
		DOG						//int의 값 = 3
	)



	fmt.Println(TIGER)
	fmt.Println(RABBIT)
	fmt.Println(DOG)

//C++에서는 enum이라는 키워드를쓴다. = Go언어 에서는 iota를 사용한다.




///////////////////////////////////////////
	
	//타입이 없는상수
	//const PI = 3.14
	//var a int = PI * 100
	//타입이 없는상수라 애러가 안난다.
	
	//타입이 있는 상수
	//const fPI float64 = 3.14
	//var a int = fPI * 100
	//타입애러가 난다.


/////////////////////////////////////////////////////////////////////////////

	//일반 변수는 주소를 알수 있다
	//변수 앞에 쓰면 메모리값을 리턴하는데
	// var num int = 20
	// fmt.Println(&num)

	////////////////////////////////////////////////////////////////////////////

}

/*
변수 = 값 벨류 상수 

go에서 상수로 사용할수 있는 녀석들
상수 : 변하지않는값
Go에서 상수로 사용될수 있는 type은?
정수, 실수, 문자열, 룬(nune), boolean(불리언), 복소수

Const

*/

/*

총평


자주쓰는 고정값에 이름을 부여해서 쓰면은 편리하게 쓸수있다. 
상수를 코드값으로 열거형으로 쓸수 있고
iota를 쓰면 증가함수를 쓸대 편리하게 쓸수 잇다.
만약에 타입이 없는 상수라면 타입이 다른 여러변수들에 사용할 수 있다.


*/